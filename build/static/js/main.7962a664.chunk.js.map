{"version":3,"sources":["components/bubbleSortChart.js","App.js","reportWebVitals.js","index.js"],"names":["BubbleSortChart","_ref","timer","data","ref","useRef","_useState","useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","_useState3","_useState4","setOriginalData","_useState5","_useState6","speed","setSpeed","_useState7","_useState8","sortingDone","setSortingDone","useEffect","slice","svg","d3","current","attr","yScale","domain","length","range","svgHeight","bars","selectAll","exit","remove","enter","append","d","i","barWidth","text","style","updateBars","newData","comparedIndexes","includes","transition","duration","sorted","n","setInterval","temp","clearInterval","bubbleSort","React","createElement","display","justifyContent","alignItems","height","textAlign","width","marginLeft","className","onClick","array","randomIndex","Math","floor","random","_ref2","randomizeData","window","location","reload","Fragment","concat","prevIsPlaying","value","onChange","event","newSpeed","parseFloat","target","App","document","title","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7962a664.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\n\nfunction BubbleSortChart({ data }) {\n  const ref = useRef();\n  const padding = 30;\n\n  // Adjust the dimensions by 40%\n  const svgWidth = 900; // 500 * 1.8\n  const svgHeight = 900; // 500 * 1.8\n\n  // Track animation progress\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [originalData, setOriginalData] = useState([]);\n  const [speed, setSpeed] = useState(1);\n  const [sortingDone, setSortingDone] = useState(false); // New state variable for sorting status\n  let timer; // Move the 'timer' variable to the component's scope\n\n  const randomizeData = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const randomIndex = Math.floor(Math.random() * (i + 1));\n      [array[i], array[randomIndex]] = [array[randomIndex], array[i]];\n    }\n    return array;\n  };\n\n  useEffect(() => {\n    setOriginalData(data.slice()); // Initialize originalData with unsorted data\n  }, [data]);\n\n  useEffect(() => {\n    // Initialize the SVG\n    const svg = d3.select(ref.current).attr('width', svgWidth).attr('height', svgHeight);\n\n    const barWidth = 35;\n    const barSpacing = 42; // 30 * 1.4\n    const xScale = d3.scaleLinear().domain([0, data.length]).range([0, data.length * barSpacing]);\n\n    const yScale = d3.scaleLinear().domain([0, d3.max(data)]).range([0, svgHeight - padding]);\n\n    // Draw the unsorted bars\n    const bars = svg.selectAll('rect').data(data);\n\n    bars.exit().remove();\n\n    bars.enter()\n      .append('rect')\n      .attr('x', (d, i) => i * barSpacing)\n      .attr('y', (d) => svgHeight - padding - yScale(d))\n      .attr('width', barWidth)\n      .attr('height', (d) => yScale(d))\n      .attr('fill', 'steelblue');\n\n    const text = svg.selectAll('.bar-label').data(data);\n\n    text.enter()\n      .append('text')\n      .attr('class', 'bar-label')\n      .attr('x', (d, i) => i * barSpacing + barWidth / 2)\n      .attr('y', (d) => svgHeight - padding - yScale(d) + 15)\n      .attr('text-anchor', 'middle')\n      .text((d) => d)\n      .style('fill', 'white')\n      .style('font-size', '12px')\n      .style('font-weight', 'bold');\n  }, [data]);\n\n  const resetDataAndSort = () => {\n    setOriginalData(randomizeData(data.slice()));\n    setSortingDone(false); // Reset sorting status\n    setIsPlaying(false); // Stop sorting animation\n    window.location.reload(); // Reload the page\n  };\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n    const barWidth = 35;\n    const barSpacing = 42; // 30 * 1.4\n    const yScale = d3.scaleLinear().domain([0, d3.max(data)]).range([0, svgHeight - padding]);\n\n    const updateBars = (newData, comparedIndexes) => {\n      const bars = svg.selectAll('rect').data(newData, (d) => d);\n\n      bars.exit().remove();\n\n      bars\n        .attr('fill', (d, i) => (comparedIndexes.includes(i) ? '#4CAF50' : 'steelblue'))\n        .attr('x', (d, i) => i * barSpacing)\n        .attr('y', (d) => svgHeight - padding - yScale(d))\n        .attr('height', (d) => yScale(d))\n        .attr('width', barWidth)\n        .transition() // Add transition for animation\n        .duration(500)\n        .attr('y', (d) => svgHeight - padding - yScale(d))\n        .attr('height', (d) => yScale(d));\n\n      bars.enter()\n        .append('rect')\n        .attr('x', (d, i) => i * barSpacing)\n        .attr('y', (d) => svgHeight - padding - yScale(0)) // Start from the bottom for animation\n        .attr('width', barWidth)\n        .attr('height', (d) => yScale(0)) // Start from the bottom for animation\n        .attr('fill', (d, i) => (comparedIndexes.includes(i) ? '#4CAF50' : 'steelblue'))\n        .transition() // Add transition for animation\n        .duration(500)\n        .attr('y', (d) => svgHeight - padding - yScale(d))\n        .attr('height', (d) => yScale(d));\n\n      const text = svg.selectAll('.bar-label').data(newData, (d) => d);\n\n      text\n        .attr('x', (d, i) => i * barSpacing + barWidth / 2)\n        .attr('y', (d) => svgHeight - padding - yScale(d) + 15)\n        .attr('text-anchor', 'middle')\n        .text((d) => d)\n        .style('font-weight', 'bold');\n\n      text.enter()\n        .append('text')\n        .attr('class', 'bar-label')\n        .attr('x', (d, i) => i * barSpacing + barWidth / 2)\n        .attr('y', (d) => svgHeight - padding - yScale(d) + 15)\n        .attr('text-anchor', 'middle')\n        .text((d) => d)\n        .style('fill', 'white')\n        .style('font-size', '12px')\n        .style('font-weight', 'bold');\n\n      text.exit().remove();\n    };\n\n    const bubbleSort = () => {\n      let sorted = false;\n      let n = data.length;\n\n      timer = setInterval(() => {\n        if (isPlaying && !sorted) {\n          sorted = true;\n          for (let i = 0; i < n - 1; i++) {\n            if (data[i] > data[i + 1]) {\n              const temp = data[i];\n              data[i] = data[i + 1];\n              data[i + 1] = temp;\n              sorted = false;\n              updateBars(data.slice(), [i, i + 1]);\n            }\n          }\n          n--;\n        } else if (!isPlaying) {\n          clearInterval(timer);\n        } else if (sorted) {\n          clearInterval(timer);\n          setSortingDone(true); // Set sorting status to done when the sorting is completed\n        }\n      }, 1000 / speed);\n    };\n\n    if (!isPlaying) {\n      clearInterval(timer);\n    } else {\n      bubbleSort();\n    }\n\n    return () => clearInterval(timer);\n  }, [data, isPlaying, speed]);\n\n  const handlePlayPause = () => {\n    setIsPlaying((prevIsPlaying) => !prevIsPlaying);\n  };\n\n  const handleSpeedChange = (event) => {\n    const newSpeed = parseFloat(event.target.value);\n    setSpeed(newSpeed);\n  };\n\n    return (\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n      <div style={{ textAlign: 'center' }}>\n        <svg ref={ref} width={svgWidth} height={svgHeight} style={{ marginLeft: '15%' }}></svg>\n        <div className=\"controls\" style={{ marginLeft: '10px' }}>\n          {sortingDone ? (\n            <button className=\"reset\" style={{ marginLeft: '10px' }} onClick={resetDataAndSort}>\n              Reset\n            </button>\n          ) : (\n            <>\n              <button className={`play-pause ${isPlaying ? 'pause' : 'play'}`} onClick={handlePlayPause}>\n                {isPlaying ? 'Pause' : 'Play'}\n              </button>\n              <label className=\"speed-label\">\n                Speed:\n                <div className=\"select-wrapper\">\n                  <select className=\"speed\" value={speed} onChange={handleSpeedChange}>\n                    <option value={0.5}>0.5x</option>\n                    <option value={0.7}>0.7x</option>\n                    <option value={1}>1x</option>\n                    <option value={1.25}>1.25x</option>\n                    <option value={1.5}>1.5x</option>\n                    <option value={2}>2x</option>\n                  </select>\n                  <div className=\"select-icon\"></div>\n                </div>\n              </label>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default BubbleSortChart;\n","import React, { useEffect, useState } from 'react';\nimport BubbleSortChart from './components/bubbleSortChart';\nimport './App.css';\n\nfunction App() {\n  const data = [25, 30, 45, 60, 20, 65, 75, 100, 55, 1, 42, 90, 89, 77, 13, 10];\n  const [sorting, setSorting] = useState('bubble');\n\n  \n  useEffect(() => {\n    document.title = 'Algorithm Visualizer';\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Bubble Sort Visualizer</h1>\n      <BubbleSortChart data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}